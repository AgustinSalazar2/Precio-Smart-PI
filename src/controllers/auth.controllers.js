const User = require('../models/User.model');

const generateJWT = require('../helpers/generateJWT');

const bcrypt = require('bcrypt');


ctrlAuth = {};


ctrlAuth.startSession = async (req, res) => {
    const {username, password} = req.body;

    try {

        const user = await User.findOne({username});
        
        //----------------- INICIO VALIDACIONES -------------------------------------------------------
        //*Controlo que el nombre del usuario efectivamente estÃ© en mi base de datos.
        if(!user){
            // console.log('User NOT FOUND');
            return res.status(400).json({
                ok: false,
                message: "Error trying to authenticate...ðŸ¤”",
            });
        };

        //*Verifico que el usuario estÃ© activo!
        if(!user.isActive){

            // console.log('The user is NO LONGER ACTIVE ðŸ•¸ðŸ•·ðŸ•¸');
            return res.status(400).json({
                ok: false,
                message: "Error trying to authenticate.."
            });
        };

        //*VALIDACIÃ“N DE CONTRASEÃ‘A:
        //*Con la biblioteca bcrypt comparo las contraseÃ±as que envÃ­a el usuario a travÃ©s de un formulario (en este caso en el body del rquest, con la contraseÃ±a que busco en la BD)

        const validatePass = bcrypt.compareSync( password , user.password ); 

        if(!validatePass){
            // console.log('The password is INCORRECT');
            return res.status(400).json({
                ok: false,
                message: "Error trying to authenticate ðŸš«."
            });
        } else {
            console.log("ContraseÃ±a correcta");
            
        };

        //----------------- FIN VALIDACIONES -------------------------------------------------------

        //*GENERACIÃ“N DE TOKEN:
        //!La lÃ³gica de generaciÃ³n de tokens estÃ¡ en la carpeta helpers
        const token = await generateJWT({ uid: user._id });

        return res.status(200).json({ 
            message: `Welcome to the MATRIX âš¡ðŸ•¶âš¡, ${username}! â˜˜`,
            user,
            token });

    } catch (error) {

        console.log(error);
        return res.status(500).json({ 
            message: 'Error trying to LOG IN ðŸ”´ðŸ”˜ðŸ”´' ,
        });
    }

};


module.exports = ctrlAuth;